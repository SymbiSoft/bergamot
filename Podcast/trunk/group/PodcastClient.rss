// ListBoxEasy.rss
//
//  Symbian Software Ltd 2005. All rights reserved.
//

#include <eikon.rh>
#include <qikon.rh>
#include <qikcommand.rh>
#include <qiklistbox.rh>
#include <qiklistboxstandardlayouts.hrh>
#include <PodcastClient.mbg>
#include <eikon.rsg>
#include <QikCategory.hrh>
#include "PodcastClient.hrh"
#include "PodcastClient.rls"

// Use this statement to ensure that the resources in the file have a unique ID
// so that an application can use multiple resource files without resource ID
// conflict. This statement must be the first non-comment statement in the file.
NAME LIST

// The three following resources are mandatory fields and need to be the 
// first resource fields in the resource file. Need to be defined in this order.
// These resources don't need to contain any useful info, just need to be there.

// RSS_SIGNATURE can be used to specify version information
RESOURCE RSS_SIGNATURE { }

// Defines the name of the default file the application framework creates.
// This resource must always be the second resource in the resource file.
RESOURCE TBUF { buf = ""; }

// This resource is used to define an application's GUI. 
// Although it's not used directly by UIQ, its declaration is mandatory.
RESOURCE EIK_APP_INFO
	{
	}

#include "PodcastClientMainView.ra"
#include "PodcastClientPlayView.ra"
#include "PodcastClientShowsView.ra"
#include "PodcastClientFeedView.ra"



//----------------------------------------------------
//------------------ VIEW COMMANDS -------------------
//----------------------------------------------------
RESOURCE QIK_COMMAND_LIST r_podcast_listview_commands
	{
	items=
		{
		// This command shall only be visible in debug mode because it is only
		// used to find memory leaks during development of the application.	
		QIK_COMMAND
			{
			id = EPodcastView;
			type = EQikCommandTypeScreen;
			text = STRING_r_view_cmd;
			groupId = 10; 
			namedGroupLinkId= 1;
			},
				QIK_COMMAND
				{
				id = EPodcastViewMain;
				type = EQikCommandTypeScreen;
				text = STRING_r_view_main_cmd;
				namedGroupId = 1;
				groupId = 1;
				},

			/*	QIK_COMMAND
				{
				id = EPodcastViewAllShows;
				type = EQikCommandTypeScreen;
				text = STRING_r_view_all_shows_cmd;
				namedGroupId = 1;
				groupId = 2;
				},	
				QIK_COMMAND
				{
				id = EPodcastViewNewShows;
				type = EQikCommandTypeScreen;
				text = STRING_r_view_new_shows_cmd;
				namedGroupId = 1;
				groupId = 2;
				},	*/	
				QIK_COMMAND
				{
				id = EPodcastViewDownloadedShows;
				type = EQikCommandTypeScreen;
				text = STRING_r_view_dl_shows_cmd;
				namedGroupId = 1;
				groupId = 2;
				},		

				QIK_COMMAND
				{
				id = EPodcastViewPendingShows;
				type = EQikCommandTypeScreen;
				text = STRING_r_view_dling_shows_cmd;
				namedGroupId = 1;
				groupId = 2;
				},					
				QIK_COMMAND
				{
				id = EPodcastViewFeeds;
				type = EQikCommandTypeScreen;
				text = STRING_r_view_feeds_cmd;
				namedGroupId = 1;
				groupId = 2;
				},
// Feed handling
		QIK_COMMAND
			{
		//	groupId = 5;
			id = EPodcastUpdateFeed;
			type = EQikCommandTypeDone;
			text = STRING_r_update_feed_cmd;
			shortText = STRING_r_update_feed_short_cmd;
			priority = 2;
			},
	QIK_COMMAND
			{
			groupId = 5;
			id = EPodcastAddFeed;
			type = EQikCommandTypeScreen;
			text = STRING_r_view_add_feed_cmd;
			},
	QIK_COMMAND
			{
			groupId = 5;
			id = EPodcastEditFeed;
			type = EQikCommandTypeScreen;
			text = STRING_r_view_edit_feed_cmd;
			},
		QIK_COMMAND
			{
			groupId = 5;
			id = EPodcastDeleteFeed;
			type = EQikCommandTypeScreen;
			text = STRING_r_view_delete_feed_cmd;
			},		
	
		QIK_COMMAND
			{
		//	groupId = 5;
			id = EPodcastUpdateAllFeeds;
			type = EQikCommandTypeDone;
			text = STRING_r_update_all_feeds_cmd;
			shortText = STRING_r_update_all_feeds_short_cmd;
			},
// Show handling	

	QIK_COMMAND
			{
			groupId = 5;
			id = EPodcastDownloadShow;
			type = EQikCommandTypeScreen;
			text = STRING_r_view_download_show_cmd;
			},		
	QIK_COMMAND
			{
			groupId = 5;
			id = EPodcastDeleteAllShows;
			type = EQikCommandTypeScreen;
			text = STRING_r_view_delete_shows_cmd;
			},
		QIK_COMMAND
			{
			groupId = 5;
			id = EPodcastPurgeShow;
			type = EQikCommandTypeScreen;
			text = STRING_r_view_purge_show_cmd;
			},
	QIK_COMMAND
			{
			groupId = 6;
			id = EPodcastRemoveDownload;
			type = EQikCommandTypeScreen;
			text = STRING_r_view_remove_download_cmd;
			},
	QIK_COMMAND
			{
			groupId = 6;
			id = EPodcastStopDownloads;
			type = EQikCommandTypeScreen;
			text = STRING_r_view_stop_downloads_cmd;
			},
		QIK_COMMAND
			{
			groupId = 6;
			id = EPodcastResumeDownloads;
			type = EQikCommandTypeScreen;
			text = STRING_r_view_resume_downloads_cmd;
			},
// Show filter handling and item marking for this
	QIK_COMMAND
			{
			groupId = 7;
			id = EPodcastShowUnplayedOnly;
			type = EQikCommandTypeScreen;
			text = STRING_r_view_show_unplayed_cmd;
			stateFlags = EQikCmdFlagCheckBox;
			},	
		QIK_COMMAND
			{
			groupId = 7;
			id = EPodcastMarkAllPlayed;
			type = EQikCommandTypeScreen;
			text = STRING_r_view_mark_all_played_cmd;
			},
		QIK_COMMAND
			{
			groupId = 7;
			id = EPodcastUpdateLibrary;
			type = EQikCommandTypeScreen;
			text = STRING_r_view_library_update_cmd;
			},	

	QIK_COMMAND
			{
			groupId = 8;
			id = EPodcastPurgeFeed;
			type = EQikCommandTypeScreen;
			text = STRING_r_view_purge_feed_cmd;
			},	
// Other commands
		QIK_COMMAND
			{
			id = EPodcastSettings;
			type = EQikCommandTypeScreen;
			text = STRING_r_settings_cmd;
			groupId = 11;  
			},
		QIK_COMMAND
			{
			id = EPodcastZoomSetting;
			type = EQikCommandTypeScreen;
			text = STRING_r_zoom_cmd;
			groupId = 11;  
			},
				
		QIK_COMMAND
			{
			id = EEikCmdExit;
			type = EQikCommandTypeScreen;
			// Indicate that it will only be created in debug builds
			stateFlags = EQikCmdFlagDebugOnly;
			text = STRING_r_listbox_listview_cmd_close_debug;
			shortText = STRING_r_listbox_listview_cmd_close_debug_shorttext;
			groupId = 255;
			}
		};
	}


//----------------------------------------------------
//--------------- ROW LAYOUT MANAGER -----------------
//----------------------------------------------------
RESOURCE QIK_ROW_LAYOUT_MANAGER r_podcast_row_layout_manager_default
	{
	default_layout_data = QIK_ROW_LAYOUT_DATA {};
	}

//----------------------------------------------------
//----------------- ROW LAYOUT DATA ------------------
//----------------------------------------------------
RESOURCE QIK_ROW_LAYOUT_DATA r_podcast_row_layout_data_fill
	{
	vertical_alignment = EQikLayoutVAlignFill;
	vertical_excess_grab_weight = 1;
	}

// Common string resources
RESOURCE TBUF r_podcast_feeds_title{buf = STRING_r_view_feeds_title;}

RESOURCE TBUF r_podcast_feeds_category{	buf = STRING_r_view_feeds_cmd;}

RESOURCE TBUF r_podcast_feeds_download_cmd{	buf = STRING_r_view_download_cmd;}

RESOURCE TBUF r_podcast_feeds_download_short_cmd{	buf = STRING_r_view_download_short_cmd;}

RESOURCE TBUF r_podcast_feeds_play_cmd{buf = STRING_r_view_play_cmd;}

RESOURCE TBUF r_podcast_player_pause_cmd{buf = STRING_r_pause_cmd;}

RESOURCE TBUF r_podcast_player_play_cmd{buf = STRING_r_play_cmd;}

RESOURCE TBUF r_podcast_main_player_cmd{buf = STRING_r_view_player_cmd;}


RESOURCE TBUF r_podcast_show_cmd{buf = STRING_r_view_show_cmd;}

RESOURCE TBUF r_podcast_update_cmd{buf = STRING_r_update_feeds_cmd;}

RESOURCE TBUF r_podcast_update_all_cmd{buf = STRING_r_update_all_feeds_cmd;}
RESOURCE TBUF r_podcast_view_cmd {buf = STRING_r_view_cmd;}

RESOURCE TBUF r_podcast_remove_feed_title {buf = STRING_r_remove_feed_title;}
RESOURCE TBUF r_podcast_remove_feed_prompt {buf = STRING_r_remove_feed_prompt;}

RESOURCE TBUF r_podcast_purge_feed_title {buf = STRING_r_purge_feed_title;}
RESOURCE TBUF r_podcast_purge_feed_prompt {buf = STRING_r_purge_feed_prompt;}

RESOURCE TBUF r_podcast_purge_show_title {buf = STRING_r_purge_show_title;}
RESOURCE TBUF r_podcast_purge_show_prompt {buf = STRING_r_purge_show_prompt;}

RESOURCE TBUF r_podcast_enable_downloads_title {buf = STRING_r_enable_downloads_title;}
RESOURCE TBUF r_podcast_enable_downloads_prompt {buf = STRING_r_enable_downloads_prompt;}

RESOURCE ARRAY r_podcast_shows_categories
	{
	items=
		{
		QIK_CATEGORY
			{
			name = STRING_r_category_all;
			flags = EQikCategoryCantBeRenamed | EQikCategoryCantBeDeleted;
			handle = EShowAllShows;			
			},
		QIK_CATEGORY
			{
			name = STRING_r_category_new;
			flags = EQikCategoryCantBeRenamed | EQikCategoryCantBeDeleted ;
			handle = EShowNewShows;
			},
		QIK_CATEGORY
			{
			name = STRING_r_category_dled;
			flags = EQikCategoryCantBeRenamed | EQikCategoryCantBeDeleted;
			handle = EShowDownloadedShows;
			},
		QIK_CATEGORY
			{
			name = STRING_r_category_pending;
			flags = EQikCategoryCantBeRenamed | EQikCategoryCantBeDeleted;
			handle = EShowPendingShows;
			},
		QIK_CATEGORY
			{
			name = "";
			flags = EQikCategoryHiddenInList;
			handle = EShowFeedShows;
			}
		};
	}

RESOURCE ARRAY r_podcast_category
	{
	items=
		{
		QIK_CATEGORY
			{
			name = STRING_r_category_all;
			flags = EQikCategoryCantBeRenamed | EQikCategoryCantBeDeleted | EQikCategoryAll;
			handle = EShowAllShows;			
			}
		};
	}

// DIALOGS
RESOURCE DIALOG r_podcast_add_feed_dlg
{
	buttons = R_EIK_BUTTONS_CANCEL_DONE;

	flags = EEikDialogFlagWait|EEikDialogFlagButtonsBelow;
	title = STRING_r_add_feed_title;
	items = 
	{
	DLG_LINE
	{
	id = EPodcastAddEditFeedDlgUrl;
	itemflags = EQikDlgItemCaptionAboveControl|EQikDlgItemCtlIsEditInPlace|EQikDlgItemHideHighlight;
	prompt = STRING_r_add_feed_prompt;
	type = EEikCtEdwin;
	control = EDWIN
	{
	lines = 5;
	};
	}
	};
}

// DIALOGS
RESOURCE DIALOG r_podcast_edit_feed_dlg
{
	buttons = R_EIK_BUTTONS_CANCEL_DONE;

	flags = EEikDialogFlagWait|EEikDialogFlagButtonsBelow;
	title = STRING_r_edit_feed_title;
	items = 
	{
	DLG_LINE
	{
	id = EPodcastAddEditFeedDlgUrl;
	itemflags = EQikDlgItemCaptionAboveControl|EQikDlgItemCtlIsEditInPlace|EQikDlgItemHideHighlight;
	prompt = STRING_r_add_feed_prompt;
	type = EEikCtEdwin;
	control = EDWIN
	{
	lines = 5;
	};
	}
	};
}

RESOURCE DIALOG r_podcast_volume_dlg
{
	buttons = r_podcast_settings_buttons;

	flags = EEikDialogFlagButtonsBelow|EEikDialogFlagDensePacking|EEikDialogFlagWait;
	title = STRING_r_podcast_setting_volume;
	items = 
	{	
		DLG_LINE
		{
			id = EPodcastSettingsVolume;
			itemflags = EQikDlgItemCaptionAboveControl|EQikDlgItemCtlIsEditInPlace|EQikDlgItemHideHighlight;
			prompt = "";
			type = EQikCtSlider;
			control = QIK_SLIDER 
			{
				min_value = 0;
				max_value = 10;
				num_markers = 10;
			};
		}
	};
}


RESOURCE ARRAY r_podcast_connection_selection_array
{
	items = 
	{
	 LBUF {txt = STRING_r_podcast_setting_default;},
	 LBUF {txt = STRING_r_podcast_setting_wlanonly;},
	 LBUF {txt = STRING_r_podcast_setting_usespecified;}
	};

}

RESOURCE ARRAY r_podcast_settings_autodl_array
{
	items = 
	{
	 LBUF {txt = STRING_podcast_autodl_off;},
	 LBUF {txt = STRING_podcast_audodl_feeds;},
	 LBUF {txt = STRING_podcast_audodl_feedsandshows;}
	};

}

RESOURCE DLG_BUTTONS r_podcast_settings_buttons
    {
    buttons=
        {
        DLG_BUTTON { id=EEikBidCancel; button=CMBUT {txt=STRING_r_podcast_setting_cancel_cmd;}; hotkey=EEikBidCancel; flags=0; },
		DLG_BUTTON { id=EPodcastSelectShowDir; button=CMBUT {txt=STRING_r_podcast_setting_showdir_cmd;};  flags=0; },     
        DLG_BUTTON { id=EEikBidOk; button=CMBUT {txt=STRING_r_podcast_setting_done_cmd;}; hotkey=EEikBidOk; flags=EEikLabeledButtonIsDefault; }
        };
    }





RESOURCE DIALOG r_podcast_settings_dlg
{
	buttons = r_podcast_settings_buttons;

	flags = EEikDialogFlagButtonsBelow|EEikDialogFlagDensePacking|EEikDialogFlagWait;
	title = STRING_r_podcast_settings_title;
	items = 
	{
		DLG_LINE
		{
			id = EPodcastSettingShowDir;
			itemflags = EQikDlgItemCaptionAboveControl;
			prompt = STRING_r_podcast_setting_showdir;
			type = EEikCtEdwin;
			control = EDWIN
			{
				lines = 3;
				maxlength = 256;
			};
		},

		/*DLG_LINE
		{
			id = EPodcastSettingsVolume;
			itemflags = EQikDlgItemCaptionAboveControl;
			prompt = STRING_r_podcast_setting_volume;
			type = EQikCtSlider;
			control = QIK_SLIDER 
			{
				min_value = 0;
				max_value = 100;
				num_markers = 10;
			};
		},*/


		DLG_LINE
		{
			id = EPodcastSettingAutoDL;
			itemflags = EQikDlgItemCaptionAboveControl;
			prompt = STRING_r_podcast_setting_autodl;
			type = EEikCtChoiceList;
			control = CHOICELIST
			{
			array_id = r_podcast_settings_autodl_array;
			};
		},
		DLG_LINE
		{
			id = EPodcastSettingUpdateInterval;
			itemflags = EQikDlgItemDenselyPacked;//EQikDlgItemCaptionAboveControl;
			prompt = STRING_r_podcast_setting_checkevery;
			type = EQikCtNumberEditor;
			trailer = STRING_r_podcast_setting_minutes;
			control = QIK_NUMBER_EDITOR
			{
				min = 0;
				max = 1440;
			};
		},
		/*DLG_LINE
		{
			id = EPodcastSettingMaxsimdls;
			itemflags = EQikDlgItemCaptionAboveControl;
			prompt = STRING_r_podcast_setting_maxsimul;
			type = EQikCtNumberEditor;
			control = QIK_NUMBER_EDITOR
			{
				min = 1;
				max = 16;
			};
		},*/
		DLG_LINE
		{
			id = EPodcastSettingConnection;
			itemflags = EQikDlgItemCaptionAboveControl;
			prompt = STRING_r_podcast_setting_connection;
			type = EEikCtChoiceList;
			control = CHOICELIST
			{
				array_id = r_podcast_connection_selection_array;
			};
		},
		DLG_LINE
		{
			id = EPodcastSettingIAPList;
			itemflags = EQikDlgItemCaptionAboveControl;
			prompt = STRING_r_podcast_setting_iaplist;
			type = EEikCtChoiceList;
			control = CHOICELIST
			{
			};
		}
	};
}



